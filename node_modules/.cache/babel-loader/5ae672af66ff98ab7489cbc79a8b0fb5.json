{"ast":null,"code":"import _classCallCheck from \"/Users/jp/Documents/clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jp/Documents/clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jp/Documents/clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jp/Documents/clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jp/Documents/clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jp/Documents/clicky-game/src/pages/GamePage.js\";\nimport React, { Component } from \"react\"; // By extending the React.Component class, Counter inherits functionality from it\n\nvar GamePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GamePage, _Component);\n\n  function GamePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GamePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GamePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0\n    };\n\n    _this.handleIncrement = function () {\n      // We always use the setState method to update a component's state\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.handleDecrement = function () {\n      // We always use the setState method to update a component's state\n      _this.setState({\n        count: _this.state.count - 1\n      });\n    };\n\n    _this.photos = [{\n      src: 'http://example.com/example/img1.jpg',\n      width: 4,\n      height: 3\n    }, {\n      src: 'http://example.com/example/img2.jpg',\n      width: 1,\n      height: 1\n    }];\n    return _this;\n  }\n\n  _createClass(GamePage, [{\n    key: \"render\",\n    // The render method returns the JSX that should be rendered\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Gallery, {\n        photos: photos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), \";\");\n    }\n  }]);\n\n  return GamePage;\n}(Component);\n\nexport default GamePage;","map":{"version":3,"sources":["/Users/jp/Documents/clicky-game/src/pages/GamePage.js"],"names":["React","Component","GamePage","state","count","handleIncrement","setState","handleDecrement","photos","src","width","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAGA;;IACMC,Q;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE;AADH,K;;UAKRC,e,GAAkB,YAAM;AACpB;AACA,YAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,K;;UAGDG,e,GAAkB,YAAM;AACpB;AACA,YAAKD,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACH,K;;UACDI,M,GAAS,CACL;AACEC,MAAAA,GAAG,EAAE,qCADP;AAEEC,MAAAA,KAAK,EAAE,CAFT;AAGEC,MAAAA,MAAM,EAAE;AAHV,KADK,EAML;AACEF,MAAAA,GAAG,EAAE,qCADP;AAEEC,MAAAA,KAAK,EAAE,CAFT;AAGEC,MAAAA,MAAM,EAAE;AAHV,KANK,C;;;;;;AAaT;6BACS;AACL,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,OAAD;AAAS,QAAA,MAAM,EAAEH,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,MAFJ;AAOH;;;;EAvCkBP,S;;AA0CvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass GamePage extends Component {\n    // Setting the initial state of the Counter component\n    state = {\n        count: 0\n    };\n\n    // handleIncrement increases this.state.count by 1\n    handleIncrement = () => {\n        // We always use the setState method to update a component's state\n        this.setState({ count: this.state.count + 1 });\n    };\n\n    // handleDecrement decreases this.state.count by 1\n    handleDecrement = () => {\n        // We always use the setState method to update a component's state\n        this.setState({ count: this.state.count - 1 });\n    };\n    photos = [\n        {\n          src: 'http://example.com/example/img1.jpg',\n          width: 4,\n          height: 3\n        },\n        {\n          src: 'http://example.com/example/img2.jpg',\n          width: 1,\n          height: 1\n        }\n      ];\n       \n    // The render method returns the JSX that should be rendered\n    render() {\n        return (\n\n            <div>\n               <Gallery photos={photos} />;\n            </div>\n\n        );\n    }\n}\n\nexport default GamePage;\n"]},"metadata":{},"sourceType":"module"}